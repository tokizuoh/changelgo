<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>swiftlang/swift CHANGELOG.md</title>
    <link>https://github.com/swiftlang/swift/blob/main/CHANGELOG.md</link>
    <description>The commit history of the CHANGELOG.md in the swiftlang/swift repository.</description>
    <pubDate>Tue, 25 Feb 2025 00:35:44 +0000</pubDate>
    <item>
      <title>Diagnose and forbid invalid Swift names on inits Initializers should alway...</title>
      <link>https://github.com/swiftlang/swift/commit/12d0458eb2eae5d777cf33650bab89e40524a895</link>
      <description>Diagnose and forbid invalid Swift names on inits&#xA;&#xA;Initializers should always have Swift names that have the special `DeclBaseName::createConstructor()` base name. Although there is an assertion to this effect in the constructor for ConstructorDecl, ClangImporter did not actually reject custom Swift names for initializers that violated this rule. This meant that asserts compilers would crash if they encountered code with an invalid `swift_name` attribute, while release compilers would silently accept them (while excluding these decls from certain checks since lookups that were supposed to find all initializers didnâ€™t find them).&#xA;&#xA;Modify ClangImporter to diagnose this condition and ignore the custom Swift name.</description>
      <pubDate>Tue, 11 Feb 2025 20:05:17 +0000</pubDate>
    </item>
    <item>
      <title>[CSApply] Avoid shortcutting argument conversion when parameter has an exte...</title>
      <link>https://github.com/swiftlang/swift/commit/44908acd754f496ced927bcb02e52803eb7dbac3</link>
      <description>[CSApply] Avoid shortcutting argument conversion when parameter has an external property wrapper&#xA;&#xA;The check to see whether argument matches the parameter exactly&#xA;causes two problems: prevents projected value initialized injection;&#xA;and, if there are multiple parameters with property wrappers,&#xA;would apply incorrect wrapper to other locations because the wrapper&#xA;application index wasn&#39;t incremented.&#xA;&#xA;Resolves: rdar://140282980</description>
      <pubDate>Fri, 22 Nov 2024 22:02:06 +0000</pubDate>
    </item>
    <item>
      <title>Update CHANGELOG.md (#77093)</title>
      <link>https://github.com/swiftlang/swift/commit/7a31f393576117ecc399b78dd593462434660f05</link>
      <description>Update CHANGELOG.md (#77093)</description>
      <pubDate>Fri, 18 Oct 2024 05:31:06 +0000</pubDate>
    </item>
    <item>
      <title>SE-0444: Promote MemberImportVisibility to an upcoming feature. The propos...</title>
      <link>https://github.com/swiftlang/swift/commit/d37303680552665058278db6349f73f92ed2bf5c</link>
      <description>SE-0444: Promote MemberImportVisibility to an upcoming feature.&#xA;&#xA;The proposal has been accepted, so `MemberImportVisibility` is no longer&#xA;experimental.&#xA;&#xA;Resolves rdar://126284512.</description>
      <pubDate>Thu, 26 Sep 2024 20:41:14 +0000</pubDate>
    </item>
    <item>
      <title>Ignore inactive IfConfigDecls in SourceKit&#39;s syntax model Clients that nee...</title>
      <link>https://github.com/swiftlang/swift/commit/9936f64c2a1297ccb46165f181de7ccafd0892c7</link>
      <description>Ignore inactive IfConfigDecls in SourceKit&#39;s syntax model&#xA;&#xA;Clients that need syntactic information should use SourceKit-LSP or&#xA;swift-syntax.</description>
      <pubDate>Sun, 08 Sep 2024 04:36:39 +0000</pubDate>
    </item>
  </channel>
</rss>